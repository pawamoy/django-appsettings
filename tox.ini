[tox]
envlist =
	clean,
	check-setup,
	check-bandit,
	check-safety,
	check-isort,
	check-black,
	check-flake8,
	check-docs-spell,
	check-docs-link,
	build-docs,
	py27-django18,
	py27-django19,
	py27-django110,
	py27-django111,
	py34-django18,
	py34-django19,
	py34-django110,
	py34-django111,
	py35-django18,
	py35-django19,
	py35-django110,
	py35-django111,
	py36-django18,
	py36-django19,
	py36-django110,
	py36-django111,
	py37-dev-django18,
	py37-dev-django19,
	py37-dev-django110,
	py37-dev-django111,
	pypy-django18,
	pypy-django19,
	pypy-django110,
	pypy-django111,
	report
skip_missing_interpreters = true

[testenv]
setenv =
	PYTHONPATH = {toxinidir}:{toxinidir}/src:{toxinidir}/tests
	PYTHONUNBUFFERED=yes
commands = {posargs:pytest --cov --cov-report=term-missing -vv runtests.py tests}
deps =
	django18: Django>=1.8,<1.9
	django19: Django>=1.9,<1.10
	django110: Django>=1.10,<1.11
	django111: Django>=1.11,<1.12
	-r{toxinidir}/requirements/test.txt
passenv = *
usedevelop = false
whitelist_externals = tox

[testenv:test]
description = Run all the Python/Django test environments.
skip_install = true
commands = tox -e py27-django18,py27-django19,py27-django110,py27-django111,py34-django18,py34-django19,py34-django110,py34-django111,py35-django18,py35-django19,py35-django110,py35-django111,py36-django18,py36-django19,py36-django110,py36-django111,py37-dev-django18,py37-dev-django19,py37-dev-django110,py37-dev-django111,pypy-django18,pypy-django19,pypy-django110,pypy-django111,
	tox -e report

[testenv:check]
description = Run all the check environments.
skip_install = true
commands = tox -e check-setup,check-bandit,check-safety,check-isort,check-black,check-flake8,check-docs-spell,check-docs-link

[testenv:parallel-test]
description = Run all the Python/Django test environments in parallel.
skip_install = true
deps = detox
commands =
	detox -e py27-django18,py27-django19,py27-django110,py27-django111,py34-django18,py34-django19,py34-django110,py34-django111,py35-django18,py35-django19,py35-django110,py35-django111,py36-django18,py36-django19,py36-django110,py36-django111,py37-dev-django18,py37-dev-django19,py37-dev-django110,py37-dev-django111,pypy-django18,pypy-django19,pypy-django110,pypy-django111,
	tox -e report

[testenv:parallel-check]
description = Run all the check environments in parallel.
skip_install = true
deps = detox
commands = detox -e check-setup,check-bandit,check-safety,check-isort,check-black,check-flake8,check-docs-spell,check-docs-link

[testenv:parallel-all]
description = Run all the environments in parallel.
skip_install = true
deps = detox
commands =
	detox -e clean,build-docs,check-setup,check-bandit,check-safety,check-isort,check-black,check-flake8,check-docs-spell,check-docs-link,py27-django18,py27-django19,py27-django110,py27-django111,py34-django18,py34-django19,py34-django110,py34-django111,py35-django18,py35-django19,py35-django110,py35-django111,py36-django18,py36-django19,py36-django110,py36-django111,py37-dev-django18,py37-dev-django19,py37-dev-django110,py37-dev-django111,pypy-django18,pypy-django19,pypy-django110,pypy-django111,
	tox -e report

[testenv:build-docs]
description = Build the documentation locally.
skip_install = true
deps = -r{toxinidir}/docs/requirements.txt
commands = sphinx-build {posargs:-E} -b html docs build/docs

[testenv:check-setup]
description = Check that the package will be correctly installed and correctly rendered on PyPI.
deps =
	check-manifest
	readme-renderer
	twine
commands =
	python setup.py clean --all sdist bdist_wheel
	twine check dist/*
	check-manifest {toxinidir}

[testenv:check-bandit]
description = Run bandit tool on the code.
skip_install = true
deps =
	bandit
commands =
	bandit -r {toxinidir}/src/appsettings

[testenv:check-safety]
description = Check that the requirements versions do not have security vulnerabilities.
skip_install = true
deps =
	safety
commands =
	safety check -r {toxinidir}/requirements/base.txt

[testenv:check-isort]
description = Check the imports order.
deps =
	isort
commands =
	isort --check-only --diff --recursive src/appsettings tests setup.py

[testenv:check-docs-spell]
description = Check the spelling in the documentation.
skip_install = true
setenv = SPELLCHECK=1
deps =
	-r{toxinidir}/docs/requirements.txt
	sphinxcontrib-spelling
	pyenchant
commands =
	- sphinx-build {posargs:-E} -Q -b html docs build/docs
	sphinx-build -b spelling -w /dev/null docs build/docs

[testenv:check-docs-link]
description = Check that the links written in documentation are valid.
skip_install = true
deps = -r{toxinidir}/docs/requirements.txt
commands =
	- sphinx-build {posargs:-E} -Q -b html docs build/docs
	sphinx-build -b linkcheck -w /dev/null docs build/docs

[testenv:run-isort]
description = Check the imports order.
deps =
	isort
commands =
	isort --apply --recursive src/appsettings tests setup.py

[testenv:run-bumpversion]
description = Increase the version number. Argument is 'patch', 'minor' or 'major'.
deps =
	bumpversion
commands =
	bumpversion {posargs}

[testenv:report]
description = Create coverage report.
skip_install = true
deps = coverage
commands =
	coverage report
	coverage html

[testenv:clean]
description = Delete coverage report.
skip_install = true
deps = coverage
commands = coverage erase

[testenv:codacy]
description = Upload coverage report to codacy.
skip_install = true
deps =
	codacy-coverage
	coverage
commands =
	coverage report
	coverage xml --ignore-errors
	python-codacy-coverage []
